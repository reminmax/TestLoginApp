<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="TestLoginApp.Pages.MainPage"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:TestLoginApp.Helpers"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             NavigationPage.HasNavigationBar="false">

    <Grid RowDefinitions="43*,57*">

        <!--#region Top part-->
        <Grid ColumnDefinitions="50*,50*"
              RowDefinitions="Auto,Auto,Auto,Auto,Auto">

            <!-- Background imgage -->
            <Image Grid.RowSpan="5"
                   Grid.ColumnSpan="2"
                   Aspect="AspectFill"
                   Source="background_img.png" />

            <!-- Logo -->
            <StackLayout Grid.Row="0"
                         Grid.ColumnSpan="2"
                         Margin="20,44"
                         HeightRequest="41"
                         HorizontalOptions="FillAndExpand"
                         Orientation="Horizontal">
                <Image Grid.RowSpan="4"
                       Grid.ColumnSpan="2"
                       Aspect="AspectFit"
                       HeightRequest="41"
                       Source="logo.png"
                       WidthRequest="41" />
                <Label Margin="12,0"
                       FontFamily="InterSemiBold"
                       FontSize="26"
                       Text="iq.academy" />

                <!-- Language -->
                <Frame Grid.Row="0"
                       Grid.Column="1"
                       Padding="20,0"
                       CornerRadius="20"
                       HorizontalOptions="EndAndExpand">
                    <StackLayout Orientation="Horizontal">
                        <Label FontFamily="InterSemiBold"
                               Text="RU"
                               VerticalOptions="Center" />
                        <BoxView Margin="12"
                                 VerticalOptions="FillAndExpand"
                                 WidthRequest="1"
                                 Color="{StaticResource SecondaryColor}" />
                        <Label Text="EN"
                               VerticalOptions="Center" />
                    </StackLayout>
                </Frame>

            </StackLayout>

            <Label Grid.Row="1"
                   Grid.Column="0"
                   Margin="21,0"
                   FontFamily="InterRegular"
                   FontSize="18"
                   HorizontalOptions="StartAndExpand"
                   Text="Learning"
                   TextColor="{StaticResource SecondaryColor}" />
            <Label Grid.Row="2"
                   Grid.Column="0"
                   Margin="21,0"
                   FontFamily="InterRegular"
                   FontSize="18"
                   HorizontalOptions="EndAndExpand"
                   Text="Management"
                   TextColor="{StaticResource SecondaryColor}" />
            <Label Grid.Row="3"
                   Grid.Column="0"
                   Margin="21,0,0,0"
                   FontFamily="InterRegular"
                   FontSize="18"
                   Text="System"
                   TextColor="{StaticResource SecondaryColor}" />

            <!-- Image -->
            <Image Grid.Row="2"
                   Grid.RowSpan="3"
                   Grid.Column="1"
                   Aspect="AspectFit"
                   Source="img.png" />

        </Grid>
        <!--#endregion-->

        <!--#region Bottom part-->
        <StackLayout Grid.Row="1"
                     Margin="20,0"
                     Spacing="10">

            <Label FontFamily="InterMedium"
                   FontSize="30"
                   Text="{x:Static helpers:ConstantValues.LoginLabelText}" />

            <!-- Email -->
            <StackLayout Style="{StaticResource AuthDataStackLayoutStyle}">
                <Frame x:Name="EmailFrame"
                       Style="{StaticResource FrameEntryStyle}">
                    <Entry Placeholder="{x:Static helpers:ConstantValues.EmailPlaceholderText}"
                           ReturnType="Next"
                           Style="{StaticResource BaseEntryStyle}"
                           Text="{Binding Email.Value}">
                        <Entry.Behaviors>
                            <xct:EventToCommandBehavior Command="{Binding CredentialsTextChangedCommand}"
                                                        EventName="TextChanged" />
                        </Entry.Behaviors>
                        <Entry.Effects>
                            <xct:RemoveBorderEffect />
                        </Entry.Effects>
                    </Entry>
                </Frame>
                <Label IsVisible="{Binding Email.IsValid, Converter={xct:InvertedBoolConverter}}"
                       Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       TextColor="{StaticResource FailColor}" />
            </StackLayout>

            <!-- Password -->
            <StackLayout Style="{StaticResource AuthDataStackLayoutStyle}">
                <Frame x:Name="PasswordFrame"
                       Style="{StaticResource FrameEntryStyle}">

                    <StackLayout Orientation="Horizontal">
                        <Entry x:Name="PasswordEntry"
                               HorizontalOptions="StartAndExpand"
                               IsPassword="True"
                               Placeholder="{x:Static helpers:ConstantValues.PasswordPlaceholderText}"
                               ReturnType="Done"
                               Style="{StaticResource BaseEntryStyle}"
                               Text="{Binding Password.Value}">
                            <Entry.Behaviors>
                                <xct:EventToCommandBehavior Command="{Binding LoginAsyncCommand}"
                                                            EventName="Completed" />
                                <xct:EventToCommandBehavior Command="{Binding CredentialsTextChangedCommand}"
                                                            EventName="TextChanged" />
                            </Entry.Behaviors>
                            <Entry.Effects>
                                <xct:RemoveBorderEffect />
                            </Entry.Effects>
                        </Entry>

                        <Label Margin="16"
                               HorizontalOptions="End"
                               Style="{StaticResource LabelIconStyle}"
                               Text="{x:Static helpers:FontAwesomeIcons.QuestionCircle}" />
                        <Label Margin="0"
                               HorizontalOptions="End"
                               Style="{StaticResource LabelIconStyle}">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ShowHidePasswordCommand}"
                                                      NumberOfTapsRequired="1" />
                            </Label.GestureRecognizers>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="show">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding ShowPassword}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter TargetName="PasswordEntry" Property="Entry.IsPassword" Value="False" />
                                            <Setter Property="Text" Value="{x:Static helpers:FontAwesomeIcons.Eye}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="hide">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding ShowPassword, Converter={xct:InvertedBoolConverter}}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter TargetName="PasswordEntry" Property="Entry.IsPassword" Value="True" />
                                            <Setter Property="Text" Value="{x:Static helpers:FontAwesomeIcons.EyeSlash}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Label>
                    </StackLayout>

                </Frame>
                <Label IsVisible="{Binding Password.IsValid, Converter={xct:InvertedBoolConverter}}"
                       Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       TextColor="{StaticResource FailColor}" />
            </StackLayout>

            <!-- Login button -->
            <Button Margin="0,2"
                    Command="{Binding LoginAsyncCommand}"
                    Text="{x:Static helpers:ConstantValues.LoginButtonText}" />

            <!-- Error message -->
            <Frame Margin="0,10"
                   Padding="20"
                   BackgroundColor="{StaticResource ErrorMessageBackgoundColor}"
                   CornerRadius="7"
                   IsVisible="{Binding ShowErrorMessage}">

                <Label FontSize="12"
                       HorizontalOptions="StartAndExpand"
                       Text="{Binding ErrorMessageText}"
                       TextColor="{StaticResource ErrorMessageTextColor}" />
            </Frame>

        </StackLayout>
        <!--#endregion-->

        <Label Grid.Row="1"
               Margin="20"
               HorizontalOptions="CenterAndExpand"
               VerticalOptions="End">
            <Label.FormattedText>
                <FormattedString>
                    <Span FontSize="17"
                          Text="{x:Static helpers:ConstantValues.DontHaveAnAccountLabelText}"
                          TextColor="{StaticResource SecondaryColor}" />
                    <Span Style="{StaticResource BaseLinkStyle}"
                          Text="{x:Static helpers:ConstantValues.RegisterLabelText}" />
                </FormattedString>
            </Label.FormattedText>

        </Label>

        <!-- ActivityIndicator -->
        <Grid Grid.RowSpan="2"
              IsVisible="{Binding IsBusy}">
            <AbsoluteLayout BackgroundColor="#585857"
                            HorizontalOptions="FillAndExpand"
                            LayoutBounds="0,0,1,1"
                            LayoutFlags="All"
                            Opacity="0.65"
                            VerticalOptions="FillAndExpand">

                <ActivityIndicator AbsoluteLayout.LayoutBounds="0.5,0.5,-1,-1"
                                   AbsoluteLayout.LayoutFlags="PositionProportional"
                                   HeightRequest="60"
                                   HorizontalOptions="Center"
                                   IsRunning="True"
                                   VerticalOptions="Center"
                                   Color="Orange" />
            </AbsoluteLayout>
        </Grid>


    </Grid>

</ContentPage>
